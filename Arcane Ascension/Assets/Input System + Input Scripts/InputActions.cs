//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Input System + Input Scripts/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""b16d9d04-72a8-41d2-b1a1-59d567f9ebbf"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b2723a99-9619-4e96-9257-495d9b1fa82e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""b2476ec2-e205-4e6c-acac-891962f611c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9aff7465-bbf6-462b-9051-1a59ceda9305"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CastSpell"",
                    ""type"": ""Button"",
                    ""id"": ""c260fb6a-d302-410c-b6ce-0de4fdafb3cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CastBasicSpell"",
                    ""type"": ""Button"",
                    ""id"": ""088ad916-c193-4bce-b8e2-52e5e13fa1d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectSpell1"",
                    ""type"": ""Button"",
                    ""id"": ""4a2539f9-315d-4a8b-889a-a0a1b6b3ae2e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectSpell2"",
                    ""type"": ""Button"",
                    ""id"": ""c15dbde8-43b3-407b-bdd8-cf74ad7b3b76"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectSpell3"",
                    ""type"": ""Button"",
                    ""id"": ""face129a-550c-4d75-bc24-3f11829a0d83"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectSpell4"",
                    ""type"": ""Button"",
                    ""id"": ""e8310be2-ecba-4eff-9087-8877bdfe3408"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""299561e6-e343-4100-accb-75de2a0c61de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""b975ce31-d459-45ff-ad6e-ee541fe973c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickSave"",
                    ""type"": ""Button"",
                    ""id"": ""0f25e72a-a24c-4efb-82f7-6d450cdf9928"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickLoad"",
                    ""type"": ""Button"",
                    ""id"": ""b8ce6067-546c-4b83-8810-8a1e4fab440c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""c764ebdd-c789-4440-a40d-00fc72cb4c5b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CheatConsole"",
                    ""type"": ""Button"",
                    ""id"": ""a9a81bc7-7db8-40a3-bf95-74d3c0778866"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""e10cad96-58af-4949-8508-f2e9f3b6bb5e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PreviousAndNextSpellMouseScroll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e3751412-a8cf-452f-80b0-3eb3d40b4f98"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextSpell"",
                    ""type"": ""Button"",
                    ""id"": ""e5f54a8c-aae2-4492-87c0-9fbe2e271edd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PreviousSpell"",
                    ""type"": ""Button"",
                    ""id"": ""92bcf55d-39f7-49ed-be72-3ab930bcb58f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""8406574f-19f4-42bb-aeea-1d8c53f3ba7a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a99e3582-77ef-4570-a421-3633e6482aba"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3a9315ea-b05f-4220-9f48-9545fac9fc7c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e8927432-ca88-487c-a6df-3b44ec11bc72"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ceb85a7f-3c1b-441a-ba1b-290e3c947dba"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""245e82a6-150a-4631-95d1-933295c2d915"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82f16dd7-9c8d-4104-859c-e2dacbdb9a66"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CastSpell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d75a0f2-d879-49eb-b87e-c08c3132f51b"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SelectSpell1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27e28a1a-46c8-4a2d-9ace-35ca196b840c"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SelectSpell2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85c48f14-4e0c-4ab2-b1e7-d438d581aa26"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SelectSpell3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c9224e0-582f-4f4e-b37c-307df8a2fe96"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SelectSpell4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c72b945c-628c-47d0-b1a1-2b23a455df61"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3435f59c-1c3f-42c6-8a31-9f0908659a5d"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""576f0d4f-a6c9-46d6-896b-72e07addcb6e"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""QuickSave"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""188b7645-adf0-4dd8-8864-6bf160be4b32"",
                    ""path"": ""<Keyboard>/f8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""QuickLoad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7dccd8a4-07f5-43de-8d5a-76494863fc67"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06a29a43-e56c-40a9-befe-ae454b18492f"",
                    ""path"": ""<Keyboard>/backslash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CheatConsole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""000b562b-b0dd-492d-9fbc-092f15b925f4"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CheatConsole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8ea6f7d-2b8a-4e14-bb8a-3134a01f0505"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f23a4fe-532a-44c3-8194-a249b01b665d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CastBasicSpell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e53e149f-386b-4e13-bffb-45ceb490a43f"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a9ec9ef-11df-4d4e-a0d1-ecff32bf53ec"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PreviousAndNextSpellMouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24d60890-a98d-4c08-9486-68a57b94de3a"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PreviousSpell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4cc961f-ea65-4f3d-b9d2-a14eb81fd1ad"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""NextSpell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CheatsConsole"",
            ""id"": ""752ab6fc-31a5-4a71-95bf-7dadfb4c65de"",
            ""actions"": [
                {
                    ""name"": ""CheatConsole"",
                    ""type"": ""Button"",
                    ""id"": ""dbcffa74-c8b6-4b56-90e0-318ea036a73f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4e0dbf79-a2b8-48a2-b0fa-f0f7d8db96fb"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CheatConsole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8c5165d-dde2-4af3-9622-048dc3d3dba0"",
                    ""path"": ""<Keyboard>/backslash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CheatConsole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4a0ad87-65dc-40b4-bf89-16e375fbb7af"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CheatConsole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Nothing"",
            ""id"": ""d8f646cc-9fdc-44a7-a5c3-12f6fc07dc55"",
            ""actions"": [],
            ""bindings"": []
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Movement = m_Gameplay.FindAction("Movement", throwIfNotFound: true);
        m_Gameplay_Jump = m_Gameplay.FindAction("Jump", throwIfNotFound: true);
        m_Gameplay_Camera = m_Gameplay.FindAction("Camera", throwIfNotFound: true);
        m_Gameplay_CastSpell = m_Gameplay.FindAction("CastSpell", throwIfNotFound: true);
        m_Gameplay_CastBasicSpell = m_Gameplay.FindAction("CastBasicSpell", throwIfNotFound: true);
        m_Gameplay_SelectSpell1 = m_Gameplay.FindAction("SelectSpell1", throwIfNotFound: true);
        m_Gameplay_SelectSpell2 = m_Gameplay.FindAction("SelectSpell2", throwIfNotFound: true);
        m_Gameplay_SelectSpell3 = m_Gameplay.FindAction("SelectSpell3", throwIfNotFound: true);
        m_Gameplay_SelectSpell4 = m_Gameplay.FindAction("SelectSpell4", throwIfNotFound: true);
        m_Gameplay_Run = m_Gameplay.FindAction("Run", throwIfNotFound: true);
        m_Gameplay_Dash = m_Gameplay.FindAction("Dash", throwIfNotFound: true);
        m_Gameplay_QuickSave = m_Gameplay.FindAction("QuickSave", throwIfNotFound: true);
        m_Gameplay_QuickLoad = m_Gameplay.FindAction("QuickLoad", throwIfNotFound: true);
        m_Gameplay_Pause = m_Gameplay.FindAction("Pause", throwIfNotFound: true);
        m_Gameplay_CheatConsole = m_Gameplay.FindAction("CheatConsole", throwIfNotFound: true);
        m_Gameplay_Interact = m_Gameplay.FindAction("Interact", throwIfNotFound: true);
        m_Gameplay_PreviousAndNextSpellMouseScroll = m_Gameplay.FindAction("PreviousAndNextSpellMouseScroll", throwIfNotFound: true);
        m_Gameplay_NextSpell = m_Gameplay.FindAction("NextSpell", throwIfNotFound: true);
        m_Gameplay_PreviousSpell = m_Gameplay.FindAction("PreviousSpell", throwIfNotFound: true);
        // CheatsConsole
        m_CheatsConsole = asset.FindActionMap("CheatsConsole", throwIfNotFound: true);
        m_CheatsConsole_CheatConsole = m_CheatsConsole.FindAction("CheatConsole", throwIfNotFound: true);
        // Nothing
        m_Nothing = asset.FindActionMap("Nothing", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Movement;
    private readonly InputAction m_Gameplay_Jump;
    private readonly InputAction m_Gameplay_Camera;
    private readonly InputAction m_Gameplay_CastSpell;
    private readonly InputAction m_Gameplay_CastBasicSpell;
    private readonly InputAction m_Gameplay_SelectSpell1;
    private readonly InputAction m_Gameplay_SelectSpell2;
    private readonly InputAction m_Gameplay_SelectSpell3;
    private readonly InputAction m_Gameplay_SelectSpell4;
    private readonly InputAction m_Gameplay_Run;
    private readonly InputAction m_Gameplay_Dash;
    private readonly InputAction m_Gameplay_QuickSave;
    private readonly InputAction m_Gameplay_QuickLoad;
    private readonly InputAction m_Gameplay_Pause;
    private readonly InputAction m_Gameplay_CheatConsole;
    private readonly InputAction m_Gameplay_Interact;
    private readonly InputAction m_Gameplay_PreviousAndNextSpellMouseScroll;
    private readonly InputAction m_Gameplay_NextSpell;
    private readonly InputAction m_Gameplay_PreviousSpell;
    public struct GameplayActions
    {
        private @InputActions m_Wrapper;
        public GameplayActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Gameplay_Movement;
        public InputAction @Jump => m_Wrapper.m_Gameplay_Jump;
        public InputAction @Camera => m_Wrapper.m_Gameplay_Camera;
        public InputAction @CastSpell => m_Wrapper.m_Gameplay_CastSpell;
        public InputAction @CastBasicSpell => m_Wrapper.m_Gameplay_CastBasicSpell;
        public InputAction @SelectSpell1 => m_Wrapper.m_Gameplay_SelectSpell1;
        public InputAction @SelectSpell2 => m_Wrapper.m_Gameplay_SelectSpell2;
        public InputAction @SelectSpell3 => m_Wrapper.m_Gameplay_SelectSpell3;
        public InputAction @SelectSpell4 => m_Wrapper.m_Gameplay_SelectSpell4;
        public InputAction @Run => m_Wrapper.m_Gameplay_Run;
        public InputAction @Dash => m_Wrapper.m_Gameplay_Dash;
        public InputAction @QuickSave => m_Wrapper.m_Gameplay_QuickSave;
        public InputAction @QuickLoad => m_Wrapper.m_Gameplay_QuickLoad;
        public InputAction @Pause => m_Wrapper.m_Gameplay_Pause;
        public InputAction @CheatConsole => m_Wrapper.m_Gameplay_CheatConsole;
        public InputAction @Interact => m_Wrapper.m_Gameplay_Interact;
        public InputAction @PreviousAndNextSpellMouseScroll => m_Wrapper.m_Gameplay_PreviousAndNextSpellMouseScroll;
        public InputAction @NextSpell => m_Wrapper.m_Gameplay_NextSpell;
        public InputAction @PreviousSpell => m_Wrapper.m_Gameplay_PreviousSpell;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnJump;
                @Camera.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCamera;
                @Camera.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCamera;
                @Camera.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCamera;
                @CastSpell.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCastSpell;
                @CastSpell.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCastSpell;
                @CastSpell.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCastSpell;
                @CastBasicSpell.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCastBasicSpell;
                @CastBasicSpell.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCastBasicSpell;
                @CastBasicSpell.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCastBasicSpell;
                @SelectSpell1.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectSpell1;
                @SelectSpell1.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectSpell1;
                @SelectSpell1.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectSpell1;
                @SelectSpell2.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectSpell2;
                @SelectSpell2.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectSpell2;
                @SelectSpell2.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectSpell2;
                @SelectSpell3.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectSpell3;
                @SelectSpell3.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectSpell3;
                @SelectSpell3.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectSpell3;
                @SelectSpell4.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectSpell4;
                @SelectSpell4.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectSpell4;
                @SelectSpell4.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectSpell4;
                @Run.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRun;
                @Dash.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDash;
                @QuickSave.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnQuickSave;
                @QuickSave.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnQuickSave;
                @QuickSave.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnQuickSave;
                @QuickLoad.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnQuickLoad;
                @QuickLoad.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnQuickLoad;
                @QuickLoad.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnQuickLoad;
                @Pause.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPause;
                @CheatConsole.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCheatConsole;
                @CheatConsole.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCheatConsole;
                @CheatConsole.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCheatConsole;
                @Interact.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteract;
                @PreviousAndNextSpellMouseScroll.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPreviousAndNextSpellMouseScroll;
                @PreviousAndNextSpellMouseScroll.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPreviousAndNextSpellMouseScroll;
                @PreviousAndNextSpellMouseScroll.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPreviousAndNextSpellMouseScroll;
                @NextSpell.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnNextSpell;
                @NextSpell.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnNextSpell;
                @NextSpell.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnNextSpell;
                @PreviousSpell.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPreviousSpell;
                @PreviousSpell.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPreviousSpell;
                @PreviousSpell.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPreviousSpell;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Camera.started += instance.OnCamera;
                @Camera.performed += instance.OnCamera;
                @Camera.canceled += instance.OnCamera;
                @CastSpell.started += instance.OnCastSpell;
                @CastSpell.performed += instance.OnCastSpell;
                @CastSpell.canceled += instance.OnCastSpell;
                @CastBasicSpell.started += instance.OnCastBasicSpell;
                @CastBasicSpell.performed += instance.OnCastBasicSpell;
                @CastBasicSpell.canceled += instance.OnCastBasicSpell;
                @SelectSpell1.started += instance.OnSelectSpell1;
                @SelectSpell1.performed += instance.OnSelectSpell1;
                @SelectSpell1.canceled += instance.OnSelectSpell1;
                @SelectSpell2.started += instance.OnSelectSpell2;
                @SelectSpell2.performed += instance.OnSelectSpell2;
                @SelectSpell2.canceled += instance.OnSelectSpell2;
                @SelectSpell3.started += instance.OnSelectSpell3;
                @SelectSpell3.performed += instance.OnSelectSpell3;
                @SelectSpell3.canceled += instance.OnSelectSpell3;
                @SelectSpell4.started += instance.OnSelectSpell4;
                @SelectSpell4.performed += instance.OnSelectSpell4;
                @SelectSpell4.canceled += instance.OnSelectSpell4;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @QuickSave.started += instance.OnQuickSave;
                @QuickSave.performed += instance.OnQuickSave;
                @QuickSave.canceled += instance.OnQuickSave;
                @QuickLoad.started += instance.OnQuickLoad;
                @QuickLoad.performed += instance.OnQuickLoad;
                @QuickLoad.canceled += instance.OnQuickLoad;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @CheatConsole.started += instance.OnCheatConsole;
                @CheatConsole.performed += instance.OnCheatConsole;
                @CheatConsole.canceled += instance.OnCheatConsole;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @PreviousAndNextSpellMouseScroll.started += instance.OnPreviousAndNextSpellMouseScroll;
                @PreviousAndNextSpellMouseScroll.performed += instance.OnPreviousAndNextSpellMouseScroll;
                @PreviousAndNextSpellMouseScroll.canceled += instance.OnPreviousAndNextSpellMouseScroll;
                @NextSpell.started += instance.OnNextSpell;
                @NextSpell.performed += instance.OnNextSpell;
                @NextSpell.canceled += instance.OnNextSpell;
                @PreviousSpell.started += instance.OnPreviousSpell;
                @PreviousSpell.performed += instance.OnPreviousSpell;
                @PreviousSpell.canceled += instance.OnPreviousSpell;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // CheatsConsole
    private readonly InputActionMap m_CheatsConsole;
    private ICheatsConsoleActions m_CheatsConsoleActionsCallbackInterface;
    private readonly InputAction m_CheatsConsole_CheatConsole;
    public struct CheatsConsoleActions
    {
        private @InputActions m_Wrapper;
        public CheatsConsoleActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CheatConsole => m_Wrapper.m_CheatsConsole_CheatConsole;
        public InputActionMap Get() { return m_Wrapper.m_CheatsConsole; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CheatsConsoleActions set) { return set.Get(); }
        public void SetCallbacks(ICheatsConsoleActions instance)
        {
            if (m_Wrapper.m_CheatsConsoleActionsCallbackInterface != null)
            {
                @CheatConsole.started -= m_Wrapper.m_CheatsConsoleActionsCallbackInterface.OnCheatConsole;
                @CheatConsole.performed -= m_Wrapper.m_CheatsConsoleActionsCallbackInterface.OnCheatConsole;
                @CheatConsole.canceled -= m_Wrapper.m_CheatsConsoleActionsCallbackInterface.OnCheatConsole;
            }
            m_Wrapper.m_CheatsConsoleActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CheatConsole.started += instance.OnCheatConsole;
                @CheatConsole.performed += instance.OnCheatConsole;
                @CheatConsole.canceled += instance.OnCheatConsole;
            }
        }
    }
    public CheatsConsoleActions @CheatsConsole => new CheatsConsoleActions(this);

    // Nothing
    private readonly InputActionMap m_Nothing;
    private INothingActions m_NothingActionsCallbackInterface;
    public struct NothingActions
    {
        private @InputActions m_Wrapper;
        public NothingActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputActionMap Get() { return m_Wrapper.m_Nothing; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NothingActions set) { return set.Get(); }
        public void SetCallbacks(INothingActions instance)
        {
            if (m_Wrapper.m_NothingActionsCallbackInterface != null)
            {
            }
            m_Wrapper.m_NothingActionsCallbackInterface = instance;
            if (instance != null)
            {
            }
        }
    }
    public NothingActions @Nothing => new NothingActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    public interface IGameplayActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnCastSpell(InputAction.CallbackContext context);
        void OnCastBasicSpell(InputAction.CallbackContext context);
        void OnSelectSpell1(InputAction.CallbackContext context);
        void OnSelectSpell2(InputAction.CallbackContext context);
        void OnSelectSpell3(InputAction.CallbackContext context);
        void OnSelectSpell4(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnQuickSave(InputAction.CallbackContext context);
        void OnQuickLoad(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnCheatConsole(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnPreviousAndNextSpellMouseScroll(InputAction.CallbackContext context);
        void OnNextSpell(InputAction.CallbackContext context);
        void OnPreviousSpell(InputAction.CallbackContext context);
    }
    public interface ICheatsConsoleActions
    {
        void OnCheatConsole(InputAction.CallbackContext context);
    }
    public interface INothingActions
    {
    }
}
